{
  "hash": "acadb91620104653ab029bb375ed80f0",
  "result": {
    "markdown": "---\ntitle: \"Homework 5\"\nauthor: \"Lucas Rosa\"\ndate: \"2023-10-30\"\ncategories: [news, code, analysis]\nimage: \"image.jpg\"\n---\n\n\n\nDataframe\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nNFL2022_stuffs <- read.csv('https://bcdanl.github.io/data/NFL2022_stuffs.csv')\n```\n:::\n\nVariable description\n\nplay_id: Numeric play identifier that when used with game_id and drive provides the unique identifier for a single play\ngame_id: Ten digit identifier for NFL game.\ndrive: Numeric drive number in the game.\nweek: Season week.\nposteam: String abbreviation for the team with possession.\nqtr: Quarter of the game (5 is overtime).\nhalf_seconds_remaining: Numeric seconds remaining in the half.\ndown: The down for the given play.\nBasically you get four attempts (aka downs) to move the ball 10 yards (by either running with it or passing it).\nIf you make 10 yards then you get another set of four downs.\npass: Binary indicator if the play was a pass play.\nwp: Estimated winning probability for the posteam given the current situation at the start of the given play.\n\nQ2b.\n\nSummarize the mean value of pass for each posteam when all the following conditions hold:\nwp is greater than 20% and less than 75%;\ndown is less than or equal to 2; and\nhalf_seconds_remaining is greater than 120.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfiltered_data <- NFL2022_stuffs %>%\n  filter(wp > 0.2 & wp < 0.75 & down <= 2 & half_seconds_remaining > 120)\n\nsummary_data <- filtered_data %>%\n  group_by(posteam) %>%\n  summarize(mean_pass = mean(pass, na.rm = TRUE))\n\nprint(summary_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 32 × 2\n   posteam mean_pass\n   <chr>       <dbl>\n 1 ARI         0.553\n 2 ATL         0.4  \n 3 BAL         0.520\n 4 BUF         0.604\n 5 CAR         0.458\n 6 CHI         0.420\n 7 CIN         0.657\n 8 CLE         0.491\n 9 DAL         0.474\n10 DEN         0.493\n# ℹ 22 more rows\n```\n:::\n:::\n\nQ2c.\n\nProvide both (1) a ggplot code with geom_point() using the resulting data.frame in Q2b and (2) a simple comments to describe the mean value of pass for each posteam.\nIn the ggplot, reorder the posteam categories based on the mean value of pass in ascending or in descending order.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\nsummary_data <- summary_data[order(summary_data$mean_pass), ]\n\n\nggplot(summary_data, aes(x = reorder(posteam, mean_pass), y = mean_pass)) +\n  geom_point() +\n  labs(title = \"Mean Value of Pass for Each posteam\",\n       x = \"posteam\",\n       y = \"Mean Pass Value\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\nQ2d.  Consider the following data.frame, NFL2022_epa:\n\n::: {.cell}\n\n```{.r .cell-code}\nNFL2022_epa <- read_csv('https://bcdanl.github.io/data/NFL2022_epa.csv')\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 46427 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): game_id, posteam, receiver, passer\ndbl (3): play_id, drive, epa\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\nVariable description for NFL2022_epa\n\nplay_id: Numeric play identifier that when used with game_id and drive provides the unique identifier for a single play\ngame_id: Ten digit identifier for NFL game.\ndrive: Numeric drive number in the game.\nposteam: String abbreviation for the team with possession.\npasser: Name of the player who passed a ball to a receiver by initially taking a three-step drop and backpedaling into the pocket to make a pass. (Mostly, they are quarterbacks)\nreceiver: Name of the receiver.\nepa: Expected points added (EPA) by the posteam for the given play.\nCreate the data.frame, NFL2022_stuffs_EPA, that includes\n\nAll the variables in the data.frame, NFL2022_stuffs;\nThe variables, passer, receiver, and epa, from the data.frame, NFL2022_epa. by joining the two data.frames.\nIn the resulting data.frame, NFL2022_stuffs_EPA, remove observations with NA in passer.\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nNFL2022_stuffs_EPA <- left_join(NFL2022_stuffs, NFL2022_epa %>% select(play_id, passer, receiver, epa), by = \"play_id\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in left_join(NFL2022_stuffs, NFL2022_epa %>% select(play_id, passer, : Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 2 of `x` matches multiple rows in `y`.\nℹ Row 24 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n```\n:::\n\n```{.r .cell-code}\nNFL2022_stuffs_EPA <- NFL2022_stuffs_EPA %>% filter(!is.na(passer))\nhead(NFL2022_stuffs_EPA)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  play_id         game_id drive week posteam qtr down half_seconds_remaining\n1      68 2022_01_BAL_NYJ     1    1     NYJ   1    1                   1796\n2      68 2022_01_BAL_NYJ     1    1     NYJ   1    1                   1796\n3      68 2022_01_BAL_NYJ     1    1     NYJ   1    1                   1796\n4      89 2022_01_BAL_NYJ     1    1     NYJ   1    1                   1769\n5      89 2022_01_BAL_NYJ     1    1     NYJ   1    1                   1769\n6      89 2022_01_BAL_NYJ     1    1     NYJ   1    1                   1769\n  pass        wp     passer        receiver         epa\n1    0 0.5469690  L.Jackson       M.Andrews  1.63733703\n2    0 0.5469690 J.Brissett D.Peoples-Jones  2.62984087\n3    0 0.5469690 D.Prescott       E.Elliott  0.86737985\n4    1 0.5725734   J.Flacco       Mi.Carter -0.49219242\n5    1 0.5725734  L.Jackson       J.Dobbins -0.01652313\n6    1 0.5725734 T.Lawrence          C.Kirk -0.84493633\n```\n:::\n:::\n\nQ2e.\n\nProvide both (1) a single ggplot and (2) a simple comment to describe the NFL weekly trend of weekly mean value of epa for each of the following two passers,\n\"J.Allen\"\n\"P.Mahomes\"\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nfiltered_data <- NFL2022_stuffs_EPA %>%\n  filter(passer %in% c(\"J.Allen\", \"P.Mahomes\"))\nggplot(filtered_data, aes(x = week, y = epa, group = passer, color = passer)) +\n  geom_line() +\n  geom_point() +\n  labs(title = \"Weekly Trend of Mean EPA for J.Allen and P.Mahomes\",\n       x = \"Week\",\n       y = \"Mean EPA\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\nCalculate the difference between the mean value of epa for \"J.Allen\" the mean value of epa for \"P.Mahomes\" for each value of week.\n\n::: {.cell}\n\n```{.r .cell-code}\nmean_epa_by_week <- NFL2022_stuffs_EPA %>%\n  group_by(week, passer) %>%\n  summarize(mean_epa = mean(epa, na.rm = TRUE), .groups = 'drop')\nmean_epa_wide <- mean_epa_by_week %>%\n  pivot_wider(names_from = passer, values_from = mean_epa)\nmean_epa_wide$epa_difference <- mean_epa_wide$J.Allen - mean_epa_wide$P.Mahomes\nhead(mean_epa_wide)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 116\n   week A.Brown A.Cooper A.Dalton A.Rodgers B.Allen B.Berrios B.Gabbert  B.Hoyer\n  <int>   <dbl>    <dbl>    <dbl>     <dbl>   <dbl>     <dbl>     <dbl>    <dbl>\n1     1  -0.203    -4.98   0.0899    0.0223  -0.726      1.18   -0.278   0.143  \n2     2  -0.287    -4.98   0.181     0.115   -0.419      1.18    0.0682  0.311  \n3     3  -0.442    -4.98   0.146     0.0556  NA         NA       0.0553 -0.364  \n4     4  -0.964    -4.98   0.0977    0.0261  -0.457      1.18   -0.681   0.00372\n5     5   0.150    -4.98   0.0304    0.0523  -1.07      NA      -1.08    0.633  \n6     6  -0.192    -4.98   0.0561   -0.0104  -1.14       1.18   -0.438  -0.201  \n# ℹ 107 more variables: B.Mann <dbl>, B.Mayfield <dbl>, B.Perkins <dbl>,\n#   B.Purdy <dbl>, B.Rypien <dbl>, B.Zappe <dbl>, C.Beathard <dbl>,\n#   C.Daniel <dbl>, C.Henne <dbl>, C.Keenum <dbl>, C.McCaffrey <dbl>,\n#   C.McCoy <dbl>, C.Rush <dbl>, C.Streveler <dbl>, C.Wentz <dbl>,\n#   C.Wilson <dbl>, D.Adams <dbl>, D.Blough <dbl>, D.Carr <dbl>, D.Cook <dbl>,\n#   D.Dallas <dbl>, D.Jones <dbl>, D.Mills <dbl>, D.Prescott <dbl>,\n#   D.Ridder <dbl>, D.Watson <dbl>, D.Webb <dbl>, `G.Minshew II` <dbl>, …\n```\n:::\n:::\n\nSummarize the resulting data.frame in Q2d, with the following four variables:\n\nposteam: String abbreviation for the team with possession.\npasser: Name of the player who passed a ball to a receiver by initially taking a three-step drop, and backpedaling into the pocket to make a pass. (Mostly, they are quarterbacks.)\nmean_epa: Mean value of epa in 2022 for each passer\nn_pass: Number of observations for each passer\nThen find the top 10 NFL passers in 2022 in terms of the mean value of epa, conditioning that n_pass must be greater than or equal to the third quantile level of n_pass.\n\n::: {.cell}\n\n```{.r .cell-code}\npasser_summary <- NFL2022_stuffs_EPA %>%\n  select(week, passer, epa) %>%\n  group_by(week, passer, .drop = TRUE) %>%\n  summarize(mean_epa = mean(epa, na.rm = TRUE),\n            n_pass = sum(!is.na(epa)), .groups = 'drop')\nquantile_threshold <- quantile(passer_summary$n_pass, 0.75)\ntop_passers <- passer_summary %>%\n  filter(n_pass >= quantile_threshold) %>%\n  arrange(desc(mean_epa)) %>%\n  head(10)\ntop_passers\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 4\n    week passer       mean_epa n_pass\n   <int> <chr>           <dbl>  <int>\n 1    11 P.Mahomes       0.426    601\n 2     7 P.Mahomes       0.410    543\n 3     9 T.Tagovailoa    0.398    266\n 4     6 T.Tagovailoa    0.396    259\n 5     8 J.Garoppolo     0.375    238\n 6    15 P.Mahomes       0.369    631\n 7     8 P.Mahomes       0.368    544\n 8    18 P.Mahomes       0.364    612\n 9     4 J.Garoppolo     0.355    268\n10    16 P.Mahomes       0.344    652\n```\n:::\n:::",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}